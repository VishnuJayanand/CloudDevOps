kind: pipeline
type: docker
name: default

steps:

- name: decrypt and untar - managing secret solution files
  # cp. https://hub.docker.com/r/frapsoft/openssl
  image: frapsoft/openssl
  environment:
    KEY:
      from_secret: key
  commands:
  - openssl enc -d -aes-256-cbc -md sha256 -pass env:KEY -in ./${DRONE_BRANCH}/src.tar.enc -out ./${DRONE_BRANCH}/src.tar
  - tar -xvf ./${DRONE_BRANCH}/src.tar


- name: build all docker images needed
  image: docker
  volumes:
  - name: dockersock
    path: /var/run/docker.sock
  commands:
  - docker --version && cd src 
  - docker build --quiet -t ${DRONE_BRANCH}ubuntu -f Dockerfile.ubuntu.curl.df .
  - docker build --quiet -t ${DRONE_BRANCH}python -f Dockerfile.python.df .

- name: rest.api.local
  image: ${DRONE_BRANCH}python
  pull: never
  detach: true
  commands:
  - python --version && cd src && uvicorn main_fastapi:app --host 0.0.0.0 

- name: check - check if main is correct
  image: ${DRONE_BRANCH}ubuntu
  pull: never
  commands:
  - chmod +x ./src/wait_for_server.sh
  - bash ./src/wait_for_server.sh 
  - cd ./${DRONE_BRANCH}
  - chmod +x main.sh
  - bash ./main.sh > output.txt
  - chmod +x ../src/solution.sh
  - bash ../src/solution.sh > expected_result.txt
  - diff -q output.txt expected_result.txt

volumes:
- name: dockersock
  host:
    path: /var/run/docker.sock

trigger:
  branch:
  - feature*